//typedefs 
typedef AllocationFixture<STANDARD<int,location<HOST> > > AllocationFixture_STANDARD_int_location_HOST___; 
typedef AllocationFixture<STANDARD<int,location<HOST> > > AllocationFixture_STANDARD_int_location_HOST___; 
typedef AllocationFixture<STANDARD<int,location<HOST> > > AllocationFixture_STANDARD_int_location_HOST___; 
typedef AllocationFixture<STANDARD<int,location<HOST> > > AllocationFixture_STANDARD_int_location_HOST___; 
typedef AllocationFixture<STANDARD<int,location<HOST> > > AllocationFixture_STANDARD_int_location_HOST___; 
typedef AllocationFixture<STANDARD<int,location<HOST> > > AllocationFixture_STANDARD_int_location_HOST___; 
typedef AllocationFixture<STANDARD<int,location<PINNED> > > AllocationFixture_STANDARD_int_location_PINNED___; 
typedef AllocationFixture<STANDARD<int,location<PINNED> > > AllocationFixture_STANDARD_int_location_PINNED___; 
typedef AllocationFixture<STANDARD<int,location<PINNED> > > AllocationFixture_STANDARD_int_location_PINNED___; 
typedef AllocationFixture<STANDARD<int,location<PINNED> > > AllocationFixture_STANDARD_int_location_PINNED___; 
typedef AllocationFixture<STANDARD<int,location<PINNED> > > AllocationFixture_STANDARD_int_location_PINNED___; 
typedef AllocationFixture<STANDARD<int,location<PINNED> > > AllocationFixture_STANDARD_int_location_PINNED___; 
typedef AllocationFixture<STANDARD<int,location<DEVICE> > > AllocationFixture_STANDARD_int_location_DEVICE___; 
typedef AllocationFixture<STANDARD<int,location<DEVICE> > > AllocationFixture_STANDARD_int_location_DEVICE___; 
typedef AllocationFixture<STANDARD<int,location<DEVICE> > > AllocationFixture_STANDARD_int_location_DEVICE___; 
typedef AllocationFixture<STANDARD<int,location<DEVICE> > > AllocationFixture_STANDARD_int_location_DEVICE___; 
typedef AllocationFixture<STANDARD<int,location<DEVICE> > > AllocationFixture_STANDARD_int_location_DEVICE___; 
typedef AllocationFixture<STANDARD<int,location<DEVICE> > > AllocationFixture_STANDARD_int_location_DEVICE___; 
typedef AllocationFixture<STANDARD<int,location<MANAGED> > > AllocationFixture_STANDARD_int_location_MANAGED___; 
typedef AllocationFixture<STANDARD<int,location<MANAGED> > > AllocationFixture_STANDARD_int_location_MANAGED___; 
typedef AllocationFixture<STANDARD<int,location<MANAGED> > > AllocationFixture_STANDARD_int_location_MANAGED___; 
typedef AllocationFixture<STANDARD<int,location<MANAGED> > > AllocationFixture_STANDARD_int_location_MANAGED___; 
typedef AllocationFixture<STANDARD<int,location<MANAGED> > > AllocationFixture_STANDARD_int_location_MANAGED___; 
typedef AllocationFixture<STANDARD<int,location<MANAGED> > > AllocationFixture_STANDARD_int_location_MANAGED___; 
typedef AllocationFixture<STANDARD<double,location<HOST> > > AllocationFixture_STANDARD_double_location_HOST___; 
typedef AllocationFixture<STANDARD<double,location<HOST> > > AllocationFixture_STANDARD_double_location_HOST___; 
typedef AllocationFixture<STANDARD<double,location<HOST> > > AllocationFixture_STANDARD_double_location_HOST___; 
typedef AllocationFixture<STANDARD<double,location<HOST> > > AllocationFixture_STANDARD_double_location_HOST___; 
typedef AllocationFixture<STANDARD<double,location<HOST> > > AllocationFixture_STANDARD_double_location_HOST___; 
typedef AllocationFixture<STANDARD<double,location<HOST> > > AllocationFixture_STANDARD_double_location_HOST___; 
typedef AllocationFixture<STANDARD<double,location<PINNED> > > AllocationFixture_STANDARD_double_location_PINNED___; 
typedef AllocationFixture<STANDARD<double,location<PINNED> > > AllocationFixture_STANDARD_double_location_PINNED___; 
typedef AllocationFixture<STANDARD<double,location<PINNED> > > AllocationFixture_STANDARD_double_location_PINNED___; 
typedef AllocationFixture<STANDARD<double,location<PINNED> > > AllocationFixture_STANDARD_double_location_PINNED___; 
typedef AllocationFixture<STANDARD<double,location<PINNED> > > AllocationFixture_STANDARD_double_location_PINNED___; 
typedef AllocationFixture<STANDARD<double,location<PINNED> > > AllocationFixture_STANDARD_double_location_PINNED___; 
typedef AllocationFixture<STANDARD<double,location<DEVICE> > > AllocationFixture_STANDARD_double_location_DEVICE___; 
typedef AllocationFixture<STANDARD<double,location<DEVICE> > > AllocationFixture_STANDARD_double_location_DEVICE___; 
typedef AllocationFixture<STANDARD<double,location<DEVICE> > > AllocationFixture_STANDARD_double_location_DEVICE___; 
typedef AllocationFixture<STANDARD<double,location<DEVICE> > > AllocationFixture_STANDARD_double_location_DEVICE___; 
typedef AllocationFixture<STANDARD<double,location<DEVICE> > > AllocationFixture_STANDARD_double_location_DEVICE___; 
typedef AllocationFixture<STANDARD<double,location<DEVICE> > > AllocationFixture_STANDARD_double_location_DEVICE___; 
typedef AllocationFixture<STANDARD<double,location<MANAGED> > > AllocationFixture_STANDARD_double_location_MANAGED___; 
typedef AllocationFixture<STANDARD<double,location<MANAGED> > > AllocationFixture_STANDARD_double_location_MANAGED___; 
typedef AllocationFixture<STANDARD<double,location<MANAGED> > > AllocationFixture_STANDARD_double_location_MANAGED___; 
typedef AllocationFixture<STANDARD<double,location<MANAGED> > > AllocationFixture_STANDARD_double_location_MANAGED___; 
typedef AllocationFixture<STANDARD<double,location<MANAGED> > > AllocationFixture_STANDARD_double_location_MANAGED___; 
typedef AllocationFixture<STANDARD<double,location<MANAGED> > > AllocationFixture_STANDARD_double_location_MANAGED___; 
typedef AllocationFixture<BUDDY<int,location<HOST> > > AllocationFixture_BUDDY_int_location_HOST___; 
typedef AllocationFixture<BUDDY<int,location<HOST> > > AllocationFixture_BUDDY_int_location_HOST___; 
typedef AllocationFixture<BUDDY<int,location<HOST> > > AllocationFixture_BUDDY_int_location_HOST___; 
typedef AllocationFixture<BUDDY<int,location<HOST> > > AllocationFixture_BUDDY_int_location_HOST___; 
typedef AllocationFixture<BUDDY<int,location<HOST> > > AllocationFixture_BUDDY_int_location_HOST___; 
typedef AllocationFixture<BUDDY<int,location<HOST> > > AllocationFixture_BUDDY_int_location_HOST___; 
typedef AllocationFixture<BUDDY<int,location<PINNED> > > AllocationFixture_BUDDY_int_location_PINNED___; 
typedef AllocationFixture<BUDDY<int,location<PINNED> > > AllocationFixture_BUDDY_int_location_PINNED___; 
typedef AllocationFixture<BUDDY<int,location<PINNED> > > AllocationFixture_BUDDY_int_location_PINNED___; 
typedef AllocationFixture<BUDDY<int,location<PINNED> > > AllocationFixture_BUDDY_int_location_PINNED___; 
typedef AllocationFixture<BUDDY<int,location<PINNED> > > AllocationFixture_BUDDY_int_location_PINNED___; 
typedef AllocationFixture<BUDDY<int,location<PINNED> > > AllocationFixture_BUDDY_int_location_PINNED___; 
typedef AllocationFixture<BUDDY<int,location<DEVICE> > > AllocationFixture_BUDDY_int_location_DEVICE___; 
typedef AllocationFixture<BUDDY<int,location<DEVICE> > > AllocationFixture_BUDDY_int_location_DEVICE___; 
typedef AllocationFixture<BUDDY<int,location<DEVICE> > > AllocationFixture_BUDDY_int_location_DEVICE___; 
typedef AllocationFixture<BUDDY<int,location<DEVICE> > > AllocationFixture_BUDDY_int_location_DEVICE___; 
typedef AllocationFixture<BUDDY<int,location<DEVICE> > > AllocationFixture_BUDDY_int_location_DEVICE___; 
typedef AllocationFixture<BUDDY<int,location<DEVICE> > > AllocationFixture_BUDDY_int_location_DEVICE___; 
typedef AllocationFixture<BUDDY<int,location<MANAGED> > > AllocationFixture_BUDDY_int_location_MANAGED___; 
typedef AllocationFixture<BUDDY<int,location<MANAGED> > > AllocationFixture_BUDDY_int_location_MANAGED___; 
typedef AllocationFixture<BUDDY<int,location<MANAGED> > > AllocationFixture_BUDDY_int_location_MANAGED___; 
typedef AllocationFixture<BUDDY<int,location<MANAGED> > > AllocationFixture_BUDDY_int_location_MANAGED___; 
typedef AllocationFixture<BUDDY<int,location<MANAGED> > > AllocationFixture_BUDDY_int_location_MANAGED___; 
typedef AllocationFixture<BUDDY<int,location<MANAGED> > > AllocationFixture_BUDDY_int_location_MANAGED___; 
typedef AllocationFixture<BUDDY<double,location<HOST> > > AllocationFixture_BUDDY_double_location_HOST___; 
typedef AllocationFixture<BUDDY<double,location<HOST> > > AllocationFixture_BUDDY_double_location_HOST___; 
typedef AllocationFixture<BUDDY<double,location<HOST> > > AllocationFixture_BUDDY_double_location_HOST___; 
typedef AllocationFixture<BUDDY<double,location<HOST> > > AllocationFixture_BUDDY_double_location_HOST___; 
typedef AllocationFixture<BUDDY<double,location<HOST> > > AllocationFixture_BUDDY_double_location_HOST___; 
typedef AllocationFixture<BUDDY<double,location<HOST> > > AllocationFixture_BUDDY_double_location_HOST___; 
typedef AllocationFixture<BUDDY<double,location<PINNED> > > AllocationFixture_BUDDY_double_location_PINNED___; 
typedef AllocationFixture<BUDDY<double,location<PINNED> > > AllocationFixture_BUDDY_double_location_PINNED___; 
typedef AllocationFixture<BUDDY<double,location<PINNED> > > AllocationFixture_BUDDY_double_location_PINNED___; 
typedef AllocationFixture<BUDDY<double,location<PINNED> > > AllocationFixture_BUDDY_double_location_PINNED___; 
typedef AllocationFixture<BUDDY<double,location<PINNED> > > AllocationFixture_BUDDY_double_location_PINNED___; 
typedef AllocationFixture<BUDDY<double,location<PINNED> > > AllocationFixture_BUDDY_double_location_PINNED___; 
typedef AllocationFixture<BUDDY<double,location<DEVICE> > > AllocationFixture_BUDDY_double_location_DEVICE___; 
typedef AllocationFixture<BUDDY<double,location<DEVICE> > > AllocationFixture_BUDDY_double_location_DEVICE___; 
typedef AllocationFixture<BUDDY<double,location<DEVICE> > > AllocationFixture_BUDDY_double_location_DEVICE___; 
typedef AllocationFixture<BUDDY<double,location<DEVICE> > > AllocationFixture_BUDDY_double_location_DEVICE___; 
typedef AllocationFixture<BUDDY<double,location<DEVICE> > > AllocationFixture_BUDDY_double_location_DEVICE___; 
typedef AllocationFixture<BUDDY<double,location<DEVICE> > > AllocationFixture_BUDDY_double_location_DEVICE___; 
typedef AllocationFixture<BUDDY<double,location<MANAGED> > > AllocationFixture_BUDDY_double_location_MANAGED___; 
typedef AllocationFixture<BUDDY<double,location<MANAGED> > > AllocationFixture_BUDDY_double_location_MANAGED___; 
typedef AllocationFixture<BUDDY<double,location<MANAGED> > > AllocationFixture_BUDDY_double_location_MANAGED___; 
typedef AllocationFixture<BUDDY<double,location<MANAGED> > > AllocationFixture_BUDDY_double_location_MANAGED___; 
typedef AllocationFixture<BUDDY<double,location<MANAGED> > > AllocationFixture_BUDDY_double_location_MANAGED___; 
typedef AllocationFixture<BUDDY<double,location<MANAGED> > > AllocationFixture_BUDDY_double_location_MANAGED___; 
//Tests/benchmarks 
BASELINE_F(allocator_SingleAllocation_Single_int_HOST,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_int__location_HOST,AllocationFixture_STANDARD_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_int_HOST,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_int__location_HOST,AllocationFixture_STANDARD_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_int_HOST,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_int__location_HOST,AllocationFixture_STANDARD_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_int_HOST,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_int__location_HOST,AllocationFixture_STANDARD_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_int_HOST,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_int__location_HOST,AllocationFixture_STANDARD_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_int_HOST,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_int__location_HOST,AllocationFixture_STANDARD_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_int_PINNED,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_int__location_PINNED,AllocationFixture_STANDARD_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_int_PINNED,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_int__location_PINNED,AllocationFixture_STANDARD_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_int_PINNED,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_int__location_PINNED,AllocationFixture_STANDARD_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_int_PINNED,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_int__location_PINNED,AllocationFixture_STANDARD_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_int_PINNED,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_int__location_PINNED,AllocationFixture_STANDARD_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_int_PINNED,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_int__location_PINNED,AllocationFixture_STANDARD_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_int_DEVICE,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_int__location_DEVICE,AllocationFixture_STANDARD_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_int_DEVICE,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_int__location_DEVICE,AllocationFixture_STANDARD_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_int_DEVICE,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_int__location_DEVICE,AllocationFixture_STANDARD_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_int_DEVICE,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_int__location_DEVICE,AllocationFixture_STANDARD_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_int_DEVICE,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_int__location_DEVICE,AllocationFixture_STANDARD_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_int_DEVICE,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_int__location_DEVICE,AllocationFixture_STANDARD_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_int_MANAGED,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_int__location_MANAGED,AllocationFixture_STANDARD_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_int_MANAGED,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_int__location_MANAGED,AllocationFixture_STANDARD_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_int_MANAGED,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_int__location_MANAGED,AllocationFixture_STANDARD_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_int_MANAGED,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_int__location_MANAGED,AllocationFixture_STANDARD_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_int_MANAGED,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_int__location_MANAGED,AllocationFixture_STANDARD_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_int_MANAGED,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_int__location_MANAGED,AllocationFixture_STANDARD_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_double_HOST,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_double__location_HOST,AllocationFixture_STANDARD_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_double_HOST,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_double__location_HOST,AllocationFixture_STANDARD_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_double_HOST,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_double__location_HOST,AllocationFixture_STANDARD_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_double_HOST,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_double__location_HOST,AllocationFixture_STANDARD_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_double_HOST,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_double__location_HOST,AllocationFixture_STANDARD_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_double_HOST,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_double__location_HOST,AllocationFixture_STANDARD_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_double_PINNED,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_double__location_PINNED,AllocationFixture_STANDARD_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_double_PINNED,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_double__location_PINNED,AllocationFixture_STANDARD_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_double_PINNED,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_double__location_PINNED,AllocationFixture_STANDARD_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_double_PINNED,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_double__location_PINNED,AllocationFixture_STANDARD_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_double_PINNED,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_double__location_PINNED,AllocationFixture_STANDARD_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_double_PINNED,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_double__location_PINNED,AllocationFixture_STANDARD_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_double_DEVICE,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_double__location_DEVICE,AllocationFixture_STANDARD_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_double_DEVICE,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_double__location_DEVICE,AllocationFixture_STANDARD_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_double_DEVICE,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_double__location_DEVICE,AllocationFixture_STANDARD_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_double_DEVICE,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_double__location_DEVICE,AllocationFixture_STANDARD_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_double_DEVICE,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_double__location_DEVICE,AllocationFixture_STANDARD_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_double_DEVICE,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_double__location_DEVICE,AllocationFixture_STANDARD_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BASELINE_F(allocator_SingleAllocation_Single_double_MANAGED,policy_STANDARD__function_SingleAllocation__concurency_Single__datatype_double__location_MANAGED,AllocationFixture_STANDARD_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BASELINE_F(allocator_SingleAllocation_Threaded_double_MANAGED,policy_STANDARD__function_SingleAllocation__concurency_Threaded__datatype_double__location_MANAGED,AllocationFixture_STANDARD_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BASELINE_F(allocator_MultipleAllocation_Single_double_MANAGED,policy_STANDARD__function_MultipleAllocation__concurency_Single__datatype_double__location_MANAGED,AllocationFixture_STANDARD_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BASELINE_F(allocator_MultipleAllocation_Threaded_double_MANAGED,policy_STANDARD__function_MultipleAllocation__concurency_Threaded__datatype_double__location_MANAGED,AllocationFixture_STANDARD_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BASELINE_F(allocator_RandomAllocation_Single_double_MANAGED,policy_STANDARD__function_RandomAllocation__concurency_Single__datatype_double__location_MANAGED,AllocationFixture_STANDARD_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BASELINE_F(allocator_RandomAllocation_Threaded_double_MANAGED,policy_STANDARD__function_RandomAllocation__concurency_Threaded__datatype_double__location_MANAGED,AllocationFixture_STANDARD_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_int_HOST,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_int__location_HOST,AllocationFixture_BUDDY_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_int_HOST,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_int__location_HOST,AllocationFixture_BUDDY_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_int_HOST,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_int__location_HOST,AllocationFixture_BUDDY_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_int_HOST,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_int__location_HOST,AllocationFixture_BUDDY_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_int_HOST,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_int__location_HOST,AllocationFixture_BUDDY_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_int_HOST,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_int__location_HOST,AllocationFixture_BUDDY_int_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_int_PINNED,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_int__location_PINNED,AllocationFixture_BUDDY_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_int_PINNED,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_int__location_PINNED,AllocationFixture_BUDDY_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_int_PINNED,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_int__location_PINNED,AllocationFixture_BUDDY_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_int_PINNED,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_int__location_PINNED,AllocationFixture_BUDDY_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_int_PINNED,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_int__location_PINNED,AllocationFixture_BUDDY_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_int_PINNED,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_int__location_PINNED,AllocationFixture_BUDDY_int_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_int_DEVICE,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_int__location_DEVICE,AllocationFixture_BUDDY_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_int_DEVICE,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_int__location_DEVICE,AllocationFixture_BUDDY_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_int_DEVICE,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_int__location_DEVICE,AllocationFixture_BUDDY_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_int_DEVICE,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_int__location_DEVICE,AllocationFixture_BUDDY_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_int_DEVICE,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_int__location_DEVICE,AllocationFixture_BUDDY_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_int_DEVICE,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_int__location_DEVICE,AllocationFixture_BUDDY_int_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_int_MANAGED,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_int__location_MANAGED,AllocationFixture_BUDDY_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_int_MANAGED,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_int__location_MANAGED,AllocationFixture_BUDDY_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_int_MANAGED,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_int__location_MANAGED,AllocationFixture_BUDDY_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_int_MANAGED,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_int__location_MANAGED,AllocationFixture_BUDDY_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_int_MANAGED,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_int__location_MANAGED,AllocationFixture_BUDDY_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_int_MANAGED,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_int__location_MANAGED,AllocationFixture_BUDDY_int_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_double_HOST,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_double__location_HOST,AllocationFixture_BUDDY_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_double_HOST,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_double__location_HOST,AllocationFixture_BUDDY_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_double_HOST,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_double__location_HOST,AllocationFixture_BUDDY_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_double_HOST,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_double__location_HOST,AllocationFixture_BUDDY_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_double_HOST,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_double__location_HOST,AllocationFixture_BUDDY_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_double_HOST,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_double__location_HOST,AllocationFixture_BUDDY_double_location_HOST___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_double_PINNED,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_double__location_PINNED,AllocationFixture_BUDDY_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_double_PINNED,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_double__location_PINNED,AllocationFixture_BUDDY_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_double_PINNED,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_double__location_PINNED,AllocationFixture_BUDDY_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_double_PINNED,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_double__location_PINNED,AllocationFixture_BUDDY_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_double_PINNED,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_double__location_PINNED,AllocationFixture_BUDDY_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_double_PINNED,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_double__location_PINNED,AllocationFixture_BUDDY_double_location_PINNED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_double_DEVICE,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_double__location_DEVICE,AllocationFixture_BUDDY_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_double_DEVICE,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_double__location_DEVICE,AllocationFixture_BUDDY_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_double_DEVICE,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_double__location_DEVICE,AllocationFixture_BUDDY_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_double_DEVICE,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_double__location_DEVICE,AllocationFixture_BUDDY_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_double_DEVICE,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_double__location_DEVICE,AllocationFixture_BUDDY_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_double_DEVICE,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_double__location_DEVICE,AllocationFixture_BUDDY_double_location_DEVICE___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
BENCHMARK_F(allocator_SingleAllocation_Single_double_MANAGED,policy_BUDDY__function_SingleAllocation__concurency_Single__datatype_double__location_MANAGED,AllocationFixture_BUDDY_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationSingle();}
BENCHMARK_F(allocator_SingleAllocation_Threaded_double_MANAGED,policy_BUDDY__function_SingleAllocation__concurency_Threaded__datatype_double__location_MANAGED,AllocationFixture_BUDDY_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->SingleAllocationThreaded();}
BENCHMARK_F(allocator_MultipleAllocation_Single_double_MANAGED,policy_BUDDY__function_MultipleAllocation__concurency_Single__datatype_double__location_MANAGED,AllocationFixture_BUDDY_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationSingle();}
BENCHMARK_F(allocator_MultipleAllocation_Threaded_double_MANAGED,policy_BUDDY__function_MultipleAllocation__concurency_Threaded__datatype_double__location_MANAGED,AllocationFixture_BUDDY_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->MultipleAllocationThreaded();}
BENCHMARK_F(allocator_RandomAllocation_Single_double_MANAGED,policy_BUDDY__function_RandomAllocation__concurency_Single__datatype_double__location_MANAGED,AllocationFixture_BUDDY_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationSingle();}
BENCHMARK_F(allocator_RandomAllocation_Threaded_double_MANAGED,policy_BUDDY__function_RandomAllocation__concurency_Threaded__datatype_double__location_MANAGED,AllocationFixture_BUDDY_double_location_MANAGED___,ALLOCATION_SAMPLES,ALLOCATION_OPERATIONS){this->RandomAllocationThreaded();}
